{"version":3,"sources":["ToDoItems.js","index.js"],"names":["ToDoItems","props","wholeList","map","char","index","react_default","a","createElement","id","role","className","value","onClick","onComplete","aria-hidden","onDelete","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","items","currentItem","e","preventDefault","setState","concat","toConsumableArray","currentTarget","reset","target","undefined","console","log","newToDos","splice","completed","document","getElementsByClassName","style","setProperty","date","Date","getDate","month","getMonth","year","getFullYear","length","name","onSubmit","addToDo","bind","placeholder","type","onChange","handleInput","src_ToDoItems","deleteToDo","completeToDo","React","Component","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.0b03ba12.chunk.js","sourcesContent":["import React from 'react';\n\nfunction ToDoItems(props){\n    return (\n        props.wholeList.map((char, index) => \n            <div id=\"todoList\" role=\"list\" className=\"ui divided middle aligned list\">\n                <div role=\"listitem\" className=\"item\">\n                    <label className=\"w3-animate-opacity\" id=\"lines\"><span className=\"singleItem\">{char}</span></label>\n                    <div className=\"right floated content\">\n                        <button className=\"ui circular icon button\" value={index} onClick={props.onComplete}><i aria-hidden=\"true\" className=\"checkmark icon\"></i></button>\n                        <button className=\"ui circular icon button\" value={index} onClick={props.onDelete}><i aria-hidden=\"true\" className=\"trash icon\"></i></button>\n                    </div>\n                </div>\n            </div>\n            )\n        )\n}\n\nexport default ToDoItems;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport ToDoItems from './ToDoItems.js'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            items: [],\n            currentItem: ''\n        }    \n    }\n\n    addToDo(e){\n        e.preventDefault()\n        if(!this.state.currentItem) return \n        this.setState({\n            items: [...this.state.items, this.state.currentItem]\n        })\n        e.currentTarget.reset()\n    }\n\n    handleInput(e){\n        e.preventDefault()\n        this.setState({\n            currentItem: e.target.value\n        })\n    }\n\n\n    deleteToDo(e){\n        if (e === undefined) {      \n            console.log(e)    \n        }\n        const newToDos = this.state.items\n        newToDos.splice(e.currentTarget.value, 1)\n        this.setState({\n            items: newToDos\n        })\n    }\n\n\n    completeToDo(e) {\n        e.preventDefault()\n        if (e === undefined) {      \n            console.log(e)    \n        }\n        var completed = document.getElementsByClassName(\"singleItem\")\n        console.log(completed)\n        completed[e.currentTarget.value].style.setProperty(\"text-decoration\", \"line-through\")\n    }\n\n    render(){\n        var date = new Date().getDate()\n        var month = new Date().getMonth()\n        var year = new Date().getFullYear()\n\n        if (this.state.items.length === 0) {\n            return(\n                <div className=\"w3-animate-opacity\">\n                    <div id=\"header\">\n                        <h2>Welcome to your ToDo list</h2>\n                        <p>TODAY'S DATE: {date}/{month}/{year}</p> \n                        <form className=\"ui medium form\" id=\"myForm\" name=\"myForm\" onSubmit={this.addToDo.bind(this)}>\n                            <input placeholder=\"What do you need to do?\" type='text' onChange={this.handleInput.bind(this)}/>\n                            <button id=\"addBut\" className=\"ui button\">ADD</button>\n                        </form>\n                    </div>\n                    <div id=\"list\">\n                        <h2 id=\"header\">Your list is currently empty!</h2>\n                    </div>            \n                </div>\n            )\n        }\n        else {\n            return(\n                <div>\n                    <div id=\"header\">\n                        <h2>Welcome to your ToDo list</h2>\n                        <p>TODAY'S DATE: {date}/{month}/{year}</p> \n                        <form className=\"ui medium form\" onSubmit={this.addToDo.bind(this)}>\n                            <input placeholder=\"What do you need to do?\" type='text' onChange={this.handleInput.bind(this)}/>\n                            <button className=\"ui button\">ADD</button>\n                        </form>\n                    </div>\n                    <div id=\"list\" className=\"w3-animate-opacity\">\n                        <ToDoItems wholeList={this.state.items} onDelete={this.deleteToDo.bind(this)} onComplete={this.completeToDo.bind(this)} />\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}